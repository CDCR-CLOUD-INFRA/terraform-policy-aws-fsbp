# This control checks whether server access logging is enabled on 'aws_cloudfront_distribution'.

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps
import "strings"

# Constants
const = {
	"policy_name":                          "cloudfront-distributions-should-have-origin-failover-configured",
	"resource_aws_cloudfront_distribution": "aws_cloudfront_distribution",
	"message": "server access logging is enabled on 'aws_cloudfront_distribution'. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/cloudfront-controls.html#cloudfront-5 for more details.",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		logging_config = maps.get(res.values, "logging_config", [])
		return logging_config is not empty
	})
}

# Variables

aws_cloudfront_distribution = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_cloudfront_distribution).resources
violations = get_violations(aws_cloudfront_distribution)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
