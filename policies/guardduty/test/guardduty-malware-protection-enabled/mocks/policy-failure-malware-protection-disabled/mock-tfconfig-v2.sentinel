import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"aws_guardduty_detector.example": {
		"address": "aws_guardduty_detector.example",
		"config": {
			"datasources": [
				{
					"kubernetes": [
						{
							"audit_logs": [
								{
									"enable": {
										"constant_value": false,
									},
								},
							],
						},
					],
					"malware_protection": [
						{
							"scan_ec2_instance_with_findings": [
								{
									"ebs_volumes": [
										{
											"enable": {
												"constant_value": false,
											},
										},
									],
								},
							],
						},
					],
					"s3_logs": [
						{
							"enable": {
								"constant_value": true,
							},
						},
					],
				},
			],
			"enable": {
				"constant_value": true,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_guardduty_detector",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
