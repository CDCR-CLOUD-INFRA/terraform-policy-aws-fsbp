# This policy requires resources of type `aws_rds_cluster` to have `backtrack_window` greater than 0

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":                "rds-ensure-cluster-backtracking-enabled",
	"message":                    "Attribute 'backtrack_window' must be greater than 0 and less than 259200 for 'aws_rds_cluster' resources. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/rds-controls.html#rds-14 for more details.",
	"resource_aws_rds_cluster":   "aws_rds_cluster",
	"engine":                     ["aurora", "aurora-mysql"],
}

# Variables

resources = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_rds_cluster).resources
violations = collection.reject(resources, func(res) {
	engine = maps.get(res, "values.engine", "")
	if engine not in const.engine {
		return true
	}
	backtrack_window = "values.backtrack_window"
    backtrack_window_value = maps.get(res, backtrack_window, null)
	return backtrack_window_value is not null and backtrack_window_value > 0 
})

summary = {
	"policy_name": "rds-ensure-cluster-backtracking-enabled",
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
